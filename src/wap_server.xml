<class
    name = "wap_server"
    title = "Wallet Server"
    script = "zproto_server_c"
    protocol_class = "wap_proto"
    package_dir = "../include"
    project_header = "wap_classes.h"
    export_macro = "WAP_EXPORT"
    >
    This is a server implementation of the Wallet Access Protocol
    <include filename = "../license.xml" />

    <state name = "start" inherit = "defaults">
        <event name = "OPEN" next = "connected">
            <action name = "register wallet" />
            <action name = "send" message = "OPEN OK" />
        </event>
        <!-- If wallet sends us anything after we restart, we signal error
            and wallet will then close its connection, and reconnect -->
        <event name = "*">
            <action name = "signal command not valid" />
            <action name = "send" message = "ERROR" />
        </event>
    </state>

    <state name = "connected" inherit = "defaults">
        <event name = "BLOCKS">
            <action name = "retrieve blocks" />
            <action name = "send" message = "BLOCKS OK" />
        </event>
        <event name = "SEND RAW TRANSACTION">
            <action name = "send transaction" />
            <action name = "send" message = "SEND RAW TRANSACTION OK" />
        </event>
        <event name = "GET TX">
            <action name = "retrieve transaction" />
            <action name = "send" message = "GET TX OK" />
        </event>
        <event name = "SAVE BC">
        		<action name = "save bc" />
            <action name = "send" message = "SAVE BC OK" />
        </event>
        <event name = "START MINING">
            <action name = "start mining process" />
            <action name = "send" message = "START MINING OK" />
        </event>
        <event name = "STOP MINING">
            <action name = "stop mining process" />
            <action name = "send" message = "STOP MINING OK" />
        </event>
        <event name = "OUTPUT INDEXES">
            <action name = "output indexes" />
            <action name = "send" message = "OUTPUT INDEXES OK" />
        </event>
        <event name = "RANDOM OUTS">
            <action name = "random outs" />
            <action name = "send" message = "RANDOM OUTS OK" />
        </event>
        <event name = "GET HEIGHT">
            <action name = "height" />
            <action name = "send" message = "GET HEIGHT OK" />
        </event>
        <event name = "GET INFO">
            <action name = "getinfo" />
            <action name = "send" message = "GET INFO OK" />
        </event>
        <event name = "GET PEER LIST">
            <action name = "get peer list" />
            <action name = "send" message = "GET PEER LIST OK" />
        </event>
        <event name = "GET MINING STATUS">
            <action name = "get mining status" />
            <action name = "send" message = "GET MINING STATUS OK" />
        </event>
        <event name = "SET LOG HASH RATE">
            <action name = "set log hash rate" />
            <action name = "send" message = "SET LOG HASH RATE OK" />
        </event>
        <event name = "SET LOG LEVEL">
            <action name = "set log level" />
            <action name = "send" message = "SET LOG LEVEL OK" />
        </event>
        <event name = "START SAVE GRAPH">
            <action name = "start save graph" />
            <action name = "send" message = "START SAVE GRAPH OK" />
        </event>
        <event name = "STOP SAVE GRAPH">
            <action name = "stop save graph" />
            <action name = "send" message = "STOP SAVE GRAPH OK" />
        </event>
        <event name = "GET BLOCK HASH">
            <action name = "get block hash" />
            <action name = "send" message = "GET BLOCK HASH OK" />
        </event>
        <event name = "GET BLOCK TEMPLATE">
            <action name = "get block template" />
            <action name = "send" message = "GET BLOCK TEMPLATE OK" />
        </event>
        <event name = "GET HARD FORK INFO">
            <action name = "get_hard_fork_info" />
            <action name = "send" message = "GET HARD FORK INFO OK" />
        </event>
        <event name = "GET CONNECTIONS LIST">
            <action name = "get connections list" />
            <action name = "send" message = "GET CONNECTIONS LIST OK" />
        </event>
        <event name = "STOP DAEMON">
            <action name = "stop daemon" />
            <action name = "send" message = "STOP DAEMON OK" />
        </event>
        <event name = "GET BLOCK BY HEIGHT">
            <action name = "get block by height" />
            <action name = "send" message = "GET BLOCK BY HEIGHT OK" />
        </event>
        <event name = "GET BLOCK BY HASH">
            <action name = "get block by hash" />
            <action name = "send" message = "GET BLOCK BY HASH OK" />
        </event>
        <event name = "GET-KEY-IMAGE-STATUS">
            <action name = "get key image status" />
            <action name = "send" message = "GET KEY IMAGE STATUS OK" />
        </event>
        <event name = "GET-TX-POOL">
            <action name = "get tx pool" />
            <action name = "send" message = "GET TX POOL OK" />
        </event>
        <event name = "sET-OUT-PEERS">
            <action name = "set out peers" />
            <action name = "send" message = "SET OUT PEERS OK" />
        </event>
    </state>

    <state name = "defaults">
        <event name = "CLOSE" next = "settling">
            <action name = "send" message = "CLOSE OK" />
            <action name = "deregister wallet" />
            <action name = "allow time to settle" />
        </event>
        <event name = "PING">
            <action name = "send" message = "PING OK" />
        </event>
        <!-- This built-in event hits on a client timeout -->
        <event name = "expired" next = "settling">
            <action name = "deregister wallet" />
            <action name = "allow time to settle" />
        </event>
        <!-- Client tried to do something we don't allow yet -->
        <event name = "exception" next = "settling">
            <action name = "send" message = "ERROR" />
            <action name = "deregister wallet" />
            <action name = "allow time to settle" />
        </event>
        <!-- All other protocol messages are invalid -->
        <event name = "*" next = "settling">
            <action name = "signal command not valid" />
            <action name = "send" message = "ERROR" />
            <action name = "deregister wallet" />
            <action name = "allow time to settle" />
        </event>
    </state>

    <state name = "settling">
        <event name = "settled">
            <action name = "terminate" />
        </event>
        <event name = "OPEN" next = "connected">
            <action name = "register new client" />
            <action name = "send" message = "OPEN OK" />
        </event>
        <event name = "*">
            <!-- Ignore any other commands -->
        </event>
    </state>
</class>

